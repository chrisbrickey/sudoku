import unittest


def sudoku_solve(board):
    return True


class SudokuTest(unittest.TestCase):

    def test_input1(self):
        board1 = [[".", ".", ".", "7", ".", ".", "3", ".", "1"],
                  ["3", ".", ".", "9", ".", ".", ".", ".", "."],
                  [".", "4", ".", "3", "1", ".", "2", ".", "."],
                  [".", "6", ".", "4", ".", ".", "5", ".", "."],
                  [".", ".", ".", ".", ".", ".", ".", ".", "."],
                  [".", ".", "1", ".", ".", "8", ".", "4", "."],
                  [".", ".", "6", ".", "2", "1", ".", "5", "."],
                  [".", ".", ".", ".", ".", "9", ".", ".", "8"],
                  ["8", ".", "5", ".", ".", "4", ".", ".", "."]]
        self.assertTrue(sudoku_solve(board1))

# describe '#sudoku_solve' do
#
#   it "works1" do
#     input = [[".",".",".","7",".",".","3",".","1"],["3",".",".","9",".",".",".",".","."],[".","4",".","3","1",".","2",".","."],[".","6",".","4",".",".","5",".","."],[".",".",".",".",".",".",".",".","."],[".",".","1",".",".","8",".","4","."],[".",".","6",".","2","1",".","5","."],[".",".",".",".",".","9",".",".","8"],["8",".","5",".",".","4",".",".","."]]
#     expect(sudoku_solve(input)).to eq(true)
#   end
#
#   it "works2" do
#     input = [[".","8","9",".","4",".","6",".","5"],[".","7",".",".",".","8",".","4","1"],["5","6",".","9",".",".",".",".","8"],[".",".",".","7",".","5",".","9","."],[".","9",".","4",".","1",".","5","."],[".","3",".","9",".","6",".","1","."],["8",".",".",".",".",".",".",".","7"],[".","2",".","8",".",".",".","6","."],[".",".","6",".","7",".",".","8","."]]
#     expect(sudoku_solve(input)).to eq(false)
#   end
#
#   it "works3" do
#     input = [[".","2","3","4","5","6","7","8","9"],["1",".",".",".",".",".",".",".","."],[".",".",".",".",".",".",".",".","."],[".",".",".",".",".",".",".",".","."],[".",".",".",".",".",".",".",".","."],[".",".",".",".",".",".",".",".","."],[".",".",".",".",".",".",".",".","."],[".",".",".",".",".",".",".",".","."],[".",".",".",".",".",".",".",".","."]]
#     expect(sudoku_solve(input)).to eq(false)
#   end
#
#   it "works4" do
#     input = [[".",".","5",".",".","2",".",".","."],[".",".","9",".","4","7",".","2","."],[".",".","8",".","5","6",".",".","1"],[".",".",".",".",".","8","3","4","."],[".",".",".",".",".",".",".",".","6"],[".",".",".",".","3",".","1","8","."],[".","2",".",".",".",".",".",".","."],[".","9",".",".","8",".","6","7","."],["3",".","6","5","7",".",".",".","."]]
#     expect(sudoku_solve(input)).to eq(true)
#   end
#
#   it "works5" do
#     input = [[".",".","3","8",".",".","4",".","."],[".",".",".",".","1",".",".","7","."],[".","6",".",".",".","5",".",".","9"],[".",".",".","9",".",".","6",".","."],[".","2",".",".",".",".",".","1","."],[".",".","4",".",".","3",".",".","2"],[".",".","2",".",".",".","8",".","."],[".","1",".",".",".",".",".","5","."],["9",".",".",".",".","7",".",".","3"]]
#     expect(sudoku_solve(input)).to eq(true)
#   end
#
#   it "works5" do
#     input = [[".",".",".",".",".",".",".",".","."],[".",".",".",".",".",".",".",".","."],[".",".",".",".",".",".",".",".","."],[".",".",".",".",".",".",".",".","."],[".",".",".",".",".",".",".",".","."],[".",".",".",".",".",".",".",".","."],[".",".",".",".",".",".",".",".","."],[".",".",".",".",".",".",".",".","."],[".",".",".",".",".",".",".",".","."]]
#     expect(sudoku_solve(input)).to eq(true)
#   end
#
# end
